{"version":3,"file":"lisa-bot.common.js","sources":["esm/src/chevron.js","esm/src/mode.js","esm/src/logger.js","esm/src/main.js"],"sourcesContent":["import { Chevron } from \"chevronjs\";\nconst chevron = new Chevron();\nexport { chevron };\n//# sourceMappingURL=chevron.js.map","const isProductionMode = () => process.env.NODE_ENV === \"production\";\nexport { isProductionMode };\n//# sourceMappingURL=mode.js.map","import * as winston from \"winston\";\nimport { isProductionMode } from \"./mode\";\nconst rootLogger = winston.createLogger({\n    level: isProductionMode() ? \"info\" : \"debug\",\n    format: winston.format.json(),\n    defaultMeta: { service: \"user-service\" },\n    transports: [\n        //\n        // - Write all logs with level `error` and below to `error.log`\n        // - Write all logs with level `info` and below to `combined.log`\n        //\n        new winston.transports.File({ filename: \"error.log\", level: \"error\" }),\n        new winston.transports.File({ filename: \"combined.log\" })\n    ]\n});\n//\n// If we're not in production then log to the `console` with the format:\n// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\n//\nif (!isProductionMode()) {\n    rootLogger.add(new winston.transports.Console({\n        format: winston.format.simple()\n    }));\n}\nexport { rootLogger };\n//# sourceMappingURL=logger.js.map","import { isNil } from \"lodash\";\nimport { chevron } from \"./chevron\";\nimport { rootLogger } from \"./logger\";\nimport { isProductionMode } from \"./mode\";\nconst logger = rootLogger.child({});\nconst DISCORD_TOKEN = isProductionMode()\n    ? process.env.DISCORD_TOKEN\n    : process.env.DISCORD_TOKEN_TEST;\nif (isNil(DISCORD_TOKEN)) {\n    throw new Error(\"No token set.\");\n}\nlogger.info(\"hi!\");\nchevron.hasInjectable(\"foo\");\n//# sourceMappingURL=main.js.map"],"names":["Chevron","winston.createLogger","winston.format","winston.transports","isNil"],"mappings":";;;;;;AACA,MAAM,OAAO,GAAG,IAAIA,iBAAO,EAAE,CAAC;;ACD9B,MAAM,gBAAgB,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC;;ACErE,MAAM,UAAU,GAAGC,oBAAoB,CAAC;IACpC,KAAK,EAAE,gBAAgB,EAAE,GAAG,MAAM,GAAG,OAAO;IAC5C,MAAM,EAAEC,cAAc,CAAC,IAAI,EAAE;IAC7B,WAAW,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE;IACxC,UAAU,EAAE;;;;;QAKR,IAAIC,kBAAkB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;QACtE,IAAIA,kBAAkB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,cAAc,EAAE,CAAC;KAC5D;CACJ,CAAC,CAAC;;;;;AAKH,IAAI,CAAC,gBAAgB,EAAE,EAAE;IACrB,UAAU,CAAC,GAAG,CAAC,IAAIA,kBAAkB,CAAC,OAAO,CAAC;QAC1C,MAAM,EAAED,cAAc,CAAC,MAAM,EAAE;KAClC,CAAC,CAAC,CAAC;CACP;;ACnBD,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACpC,MAAM,aAAa,GAAG,gBAAgB,EAAE;MAClC,OAAO,CAAC,GAAG,CAAC,aAAa;MACzB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;AACrC,IAAIE,YAAK,CAAC,aAAa,CAAC,EAAE;IACtB,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;CACpC;AACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnB,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC"}